SYCL Examples
=============

Welcome to SYCL Examples' documentation !

SYCL is a royalty-free, cross-platform, generic C++ programming model for
heterogeneous computing :cite:`sycl_2020`.
SYCL is built on parallel APIs such as OpenCL :cite:`khronos_opencl_registry`,
CUDA :cite:`nvidia_cuda_guide`, and HIP :cite:`amd_hip_guide` which are
commonly used for programming GPUs, CPUs and other accelerators such as FPGAs.
These underlying parallel APIs are denoted as *backends* in SYCL.
SYCL backend implementations extend the concepts found in these backends and
enable their use through modern C++ with *SYCL backend API*.
The SYCL specification defines the behavior that all SYCL backend
implementations must provide to users.
A *SYCL device* is an abstraction of a piece of hardware that can be used by
a SYCL program :cite:`sycl_2020`.
A function object that can execute on a device exposed by a SYCL backend API
is called a *SYCL kernel function* :cite:`sycl_2020`.

.. toctree::
   :maxdepth: 3
   :caption: Table of Contents

   device-discovery
   vector-init

.. bibliography::
